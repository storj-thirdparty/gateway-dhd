// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/transfer/{bucketName}/{objectPathPrefix}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload an object at the specified bucketName \u0026 objectPathPrefix on Storj",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Object Operations"
                ],
                "summary": "Upload an object to Storj",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket Name",
                        "name": "bucketName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "/",
                        "description": "Object Path Prefix",
                        "name": "objectPathPrefix",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File Name",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "anonymous",
                        "description": "Your name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "anonymous",
                        "description": "Your email",
                        "name": "email",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/transfer/{bucketName}/{objectPath}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Download a Storj object by its bucketName \u0026 objectPath",
                "produces": [
                    "application/json",
                    "text/plain",
                    "application/octet-stream",
                    "video/mp4",
                    "image/png",
                    "image/jpeg",
                    "image/gif"
                ],
                "tags": [
                    "Object Operations"
                ],
                "summary": "Download a Storj object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket Name",
                        "name": "bucketName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Object Path",
                        "name": "objectPath",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
